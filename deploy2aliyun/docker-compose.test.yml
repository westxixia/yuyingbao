# Docker Compose 配置文件 - 育婴宝后端服务本地测试
# 用于在推送到阿里云之前进行本地验证

services:
  # 育婴宝后端服务
  yuyingbao-server:
    build:
      context: ..
      dockerfile: deploy2aliyun/Dockerfile
    container_name: yuyingbao-server-test
    ports:
      - "8080:8080"
    environment:
      # Spring Boot 配置 - 2G内存优化
      SPRING_PROFILES_ACTIVE: test
      SERVER_PORT: 8080
      SERVER_TOMCAT_THREADS_MAX: 50
      SERVER_TOMCAT_ACCEPT_COUNT: 100
      
      # JVM优化参数
      JAVA_OPTS: "-Xms256m -Xmx768m -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
      
      # 数据库连接池优化 - 2G内存服务器
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: yuyingbao
      DB_USERNAME: yuyingbao
      DB_PASSWORD: password123
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 10
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 2
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 30000
      SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: 300000
      
      # JWT配置
      JWT_SECRET: test-secret-key-for-development-only
      JWT_EXPIRATION: 86400000
      
      # 微信小程序配置（测试环境）
      WECHAT_APP_ID: test-app-id
      WECHAT_APP_SECRET: test-app-secret
      
      # 日志配置
      LOGGING_LEVEL_COM_YUYINGBAO: DEBUG
      LOGGING_LEVEL_SQL: DEBUG
      
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    depends_on:
      - postgres
    networks:
      - yuyingbao-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL 数据库
  postgres:
    image: postgres:17
    container_name: yuyingbao-postgres-test
    environment:
      POSTGRES_DB: yuyingbao
      POSTGRES_USER: yuyingbao
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - yuyingbao-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yuyingbao -d yuyingbao"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: yuyingbao-redis-test
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass "redis123"
    volumes:
      - redis_data:/data
    networks:
      - yuyingbao-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  yuyingbao-network:
    driver: bridge
    name: yuyingbao-test-network

volumes:
  postgres_data:
    name: yuyingbao-postgres-data
  redis_data:
    name: yuyingbao-redis-data